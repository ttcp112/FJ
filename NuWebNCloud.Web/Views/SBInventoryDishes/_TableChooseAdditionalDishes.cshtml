@model NuWebNCloud.Shared.Models.Sandbox.Inventory.Product.GroupProductModels

@if (Model.ListProductOnGroup != null && Model.ListProductOnGroup.Count > 0)
{
    <table class="table table-striped table-hover">
        @*<thead>
        <tr style="background-color:#34495e; color:#fff;">
            <th style="width:1%;"><input type="checkbox" onchange="ToogleCheckAll(this, '#list-additionaldishes')"></th>
            <th>Modifier's Name</th>
        </tr>
    </thead>*@
        <tbody id="list-additionaldishes">
            @for (int i = 0; i < Model.ListProductOnGroup.Count; i++)
            {
                <tr data-id="@Model.ListProductOnGroup[i].ProductID" style="cursor:pointer;" class="SpecificItems">
                    <td style="width:1%;">
                        @Html.CheckBoxFor(model => model.ListProductOnGroup[i].Checked)
                        @Html.HiddenFor(model => model.ListProductOnGroup[i].ProductName, new { @id = "hidName" })
                        @Html.HiddenFor(model => model.ListProductOnGroup[i].Sequence, new { @id = "hidSeq" })
                        @*@Html.TextBoxFor(model => model.ListProductOnGroup[i].Seq, new { @class = "number" })*@
                        @Html.HiddenFor(model => model.ListProductOnGroup[i].ExtraPrice, new { @id = "hidExtraPrice" })
                    </td>
                    <td onclick="TickCheckBox(this)"> @Model.ListProductOnGroup[i].ProductName </td>
                </tr>
            }
        </tbody>
    </table>
}

<script>
    function TickCheckBox(td) {
        var tr = $(td).parents('tr:first');
        $(tr).find('input[type=checkbox]').prop('checked', !$(tr).find('input[type=checkbox]').prop('checked'))
    }
    (function ($) {
        $.fn.numberFormat = function () {
            this.each(function (i) {
                $(this).change(function (e) {
                    if (isNaN(parseFloat(this.value))) return;
                    //this.value = parseFloat(this.value).toFixed(4);
                });
            });
            return this; //for chaining
        }
    })(jQuery);
    $(document).ready(function () {
        // apply the numberFormat behaviour to elements with 'number' as their class
        $(function () {
            $('.number').numberFormat();
        });
       
    });
</script>