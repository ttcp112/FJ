@model NuWebNCloud.Shared.Models.Settings.TaxModels
@using NuWebNCloud.Shared.Utilities;

@if (Model.ListProductOfTax != null && Model.ListProductOfTax.Count > 0)
{
    <table class="table table-striped table-hover">
        <thead>
            <tr style="background-color:#34495e; color:#fff;">
                <th style="width:1%;">
                    <input type="checkbox" id="chkAllItem_@Model.currentItemOffset" onchange="ToogleCheckAllItem(this, '#list-data')" />
                </th>
                <th>
                    @Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey("Item Name"))
                    @Html.HiddenFor(model => model.StoreID, new { @id = "hidStoreIDTax" })
                </th>
            </tr>
        </thead>
        <tbody id="list-data">
            @for (int i = 0; i < Model.ListProductOfTax.Count; i++)
            {
                <tr data-id="@Model.ListProductOfTax[i].ProductID" style="cursor:pointer;" class="SpecificItems">
                    <td>
                        @Html.CheckBoxFor(model => model.ListProductOfTax[i].Checked)
                        @Html.HiddenFor(model => model.ListProductOfTax[i].ProductID, new { @id = "hidID" })
                        @Html.HiddenFor(model => model.ListProductOfTax[i].ProductCode, new { @id = "hidCode" })
                        @Html.HiddenFor(model => model.ListProductOfTax[i].ProductName, new { @id = "hidName" })
                        @Html.HiddenFor(model => model.ListProductOfTax[i].ProductTypeCode, new { @id = "hidItemType" })
                    </td>
                    <td onclick="TickCheckBox(this, '#list-data', '@Model.currentItemOffset')"> @Model.ListProductOfTax[i].ProductName</td>
                </tr>
            }
        </tbody>
    </table>
}

<script>
    function TickCheckBox(td, containElementSelector, OffSet) {
        var tr = $(td).parents('tr:first');
        $(tr).find('input[type=checkbox]').prop('checked', !$(tr).find('input[type=checkbox]').prop('checked'))

        var _trCount = $(containElementSelector).find("tr:visible").length;
        var lengthCheck = $(containElementSelector).find("tr:visible").find("input[type='checkbox']:checked").length;
        if (_trCount === lengthCheck) {
            $('#chkAllItem_' + OffSet + '').prop('checked', true);
        } else {
            $('#chkAllItem_' + OffSet + '').prop('checked', false);
        }
    }

    function ToogleCheckAllItem(e, containElementSelector) {
        checkAll = $(e).prop("checked");
        $(containElementSelector).find("tr:visible").find("input[type='checkbox']").prop("checked", checkAll);
        if ($(e).prop('id') != 'select-all') {
            ToggleBtnDelete();
        }
    }
</script>
