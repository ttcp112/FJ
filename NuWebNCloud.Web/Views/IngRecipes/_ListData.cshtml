@using NuWebNCloud.Shared
@model NuWebNCloud.Shared.Models.Ingredients.RecipeProductViewModels
@using NuWebNCloud.Shared.Utilities;
<div class="table-responsive">
    <div class="x_panel">
        <div class="x_title">
            <h2>
                @String.Format("{0}", Model.Type == (byte)Commons.EProductType.Dish ? _AttributeForLanguage.CurrentUser.GetLanguageTextFromKey("Dishes") : _AttributeForLanguage.CurrentUser.GetLanguageTextFromKey("Modifiers"))
            </h2>
            <div class="clearfix"></div>
        </div>
        <div class="x_content">
            <table id="datatable-responsive" class="table table-striped table-bordered dt-responsive nowrap table table-striped jambo_table bulk_action" cellspacing="0" style="width:100%;">
                <thead style="background-color:#34495e; color:#fff;">
                    <tr>
                        <th style="text-align:center;">@Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey("Code")) </th>
                        <th>@Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey("Name"))</th>
                        <th style="text-align:center;">@Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey("Ingredients"))</th>
                        <th style="text-align:center;">@Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey("Store"))</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.ListItem != null)
                    {
                        for (int i = 0; i < Model.ListItem.Count; i++)
                        {
                            string styleRow = "row-evenItem";
                            if (i % 2 == 0)
                            {
                                styleRow = "row-oddItem";
                            }
                            var item = Model.ListItem[i];
                            <tr onclick="ShowModalAddIngredient('@item.ItemId','@item.StoreId', '@Model.Type', '@item.ItemName')"
                                style="cursor:pointer;color:#34495e; font-weight:bold; text-align:center;" class="@styleRow">
                                <td>@item.ItemCode</td>
                                <td style="text-align:left;">@item.ItemName</td>
                                <td>@item.Ingredient</td>
                                <td>@item.StoreName</td>
                            </tr>
                        }
                    }
                </tbody>
            </table>

            <!-- Modal Add Ingredient-->
            <div class="modal fade" id="modalIngredient" tabindex="-1" role="dialog" aria-hidden="true" data-backdrop="static">
                <div class="modal-dialog modal-lg" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">×</span>
                            </button>
                            <h4 class="modal-title" id="ltrTitle" style="color:#34495e; font-weight:bold;">@Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey("Add Ingredients Recipe")) </h4>
                        </div>
                        <div class="modal-body scroll" style="padding:0; margin-top:3px;">

                            <div class="form-group" style="padding:10px 5px 0 5px;">
                                <div class="input-group">
                                    <input type="text" class="form-control col-md-10" placeholder="@Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey("Ingredients Name"))" onkeypress="HandleKeyPress(event)" />
                                    <div class="input-group-btn">
                                        <button type="button" onclick="SearchIngredient(this); return false;" class="btn bg-fnb">
                                            <i class="fa fa-search"></i>
                                        </button>
                                    </div>
                                </div>
                            </div>

                            <div id="tbl-add-ingredient" class="form-group" @*style="height:200px; overflow-y:scroll;"*@>
                            </div>
                            <input type="hidden" id="hidProductId" />
                            <input type="hidden" id="hidStoreId" />
                            <input type="hidden" id="hidProductType" />
                            <input type="hidden" id="hidProductName" />

                        </div>
                        <div class="modal-footer" style="text-align:center;">
                            <div class="col-md-12">
                                <h5><span class="label label-danger" id="ltrMsg"></span></h5>
                            </div>
                            @if (@ViewBag.IsAction == false)
                            {
                                <button id="btn-save-dish" type="button" class="btn btn-beauty bg-fnb" disabled onclick="AddIngredient()">@Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey("Save")) </button>
                            }
                            else
                            {
                            <button id="btn-save-dish" type="button" class="btn btn-beauty bg-fnb" onclick="AddIngredient()">@Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey("Save"))</button>
                            }
                            <button class="btn btn-default" data-dismiss="modal">@Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey("Cancel"))</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    function ShowView(url) {
        ShowViewOrEdit(url);
        return false;
    }
    $(document).ready(function () {
        var handleDataTableButtons = function () {
            if ($("#datatable-buttons").length) {
                $("#datatable-buttons").DataTable({

                    dom: "Bfrtip",
                    responsive: true
                });
            }
        };

        TableManageButtons = function () {
            "use strict";
            return {
                init: function () {
                    handleDataTableButtons();
                }
            };
        }();

        $('#datatable').dataTable();
        $('#datatable-keytable').DataTable({
            keys: true
        });

        $('#datatable-responsive').DataTable({
            "columnDefs": [
                //{ "orderable": false, "targets": 4 }
                 { "width": "5%", "targets": 0 },
                 { "width": "5%", "targets": 2 },
                 { "width": "10%", "targets": 3 }
            ],
            "order": [
                [3, 'asc'],
                [1, 'asc'],
            ],
            "displayLength": 25,
            "drawCallback": function (settings) {
                var api = this.api();
                var rows = api.rows({ page: 'current' }).nodes();
                //var last = null;
                //Column Group
                var columns = [3];
                for (i = 0; i < columns.length; i++) {
                    var last = null;
                    var colNo = columns[i];
                    api.column(colNo, { page: 'current' }).data().each(function (group, index) {
                        if (last !== group) {
                            if (i == 0) {
                                $(rows).eq(index).before(
                                    '<tr class="group"><td colspan="7"><strong style="color:#d9534f;">' + (group === '' ? '|' : group) + '</strong></td></tr>'
                                );
                            } else {
                                $(rows).eq(index).before(
                                    '<tr class="group row-group-category"><td colspan="7"><strong>&nbsp;&nbsp;' + (group === '' ? '|' : group) + '</strong></td></tr>'
                                );
                            }
                            last = group;
                        }
                    });
                }
            }
        });

        //$('#datatable-scroller').DataTable({
        //    ajax: "js/datatables/json/scroller-demo.json",
        //    deferRender: true,
        //    scrollY: 380,
        //    scrollCollapse: true,
        //    scroller: true
        //});

        var table = $('#datatable-fixed-header').DataTable({
            fixedHeader: true
        });

        TableManageButtons.init();
    });

    /**/
    function ShowModalAddIngredient(id, storeId, productType, productName) {

  
        @*if ('@ViewBag.IsAction' =='False') {
              return;
        }*@
        $('#modalIngredient').modal('show');

        $('#ltrMsg').text('');
        var modal = $("#modalIngredient");
        //var contentWidth = ($("html").width() - $(".main-sidebar").width()) / 2;
        //var marginLeft = (contentWidth - 450) + $(".main-sidebar").width();
        $(modal).modal({
            keyboard: false,
            show: true,
            backdrop: false
        });
        var productId = id;
        LoadIngredient('#tbl-add-ingredient', productId, storeId, productType);

        $('#hidProductId').val(id);
        $('#hidStoreId').val(storeId);
        $('#hidProductType').val(productType);
        $('#hidProductName').val(productName);
        $('#ltrTitle').text('@Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey("Add"))  [' + productName + '] @Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey("Recipe"))');
    }

    function LoadIngredient(container, productId, storeId, productType) {
        $('.se-pre-con').show();
        $.ajax({
            url: '@Url.Action("LoadIngredient", "IngRecipes")',
            type: 'get',
            data: { ProductId: productId, StoreId: storeId, ProductType: parseInt(productType) },
            dataType: 'html',
            traditional: true,
            beforeSend: function () {
                $('.se-pre-con').show();
            },
            error: function (e) {
                //debugger
            },
            success: function (data) {
                $(container).html(data);
                ResizeModal(container, 250);
            },
            complete: function () {
                $('.se-pre-con').hide();
            }
        });
    }

    function AddIngredient(btn) {
        var trs = $('.modal-body table tbody tr');
        var data = [];

        var ProductId = $('#hidProductId').val();
        var StoreId = $('#hidStoreId').val();
        var ProductType = $('#hidProductType').val();
        var ProductName = $('#hidProductName').val();
        var flag = true;
        for (var i = 0; i < trs.length; i++) {
            var tr = trs[i];
            var isSelect = $(tr).find('td input[type="checkbox"]').prop('checked');
            var IngredientName = $(tr).find('td #hidIngredientName').val();
            var BaseUOM = $(tr).find('td #BaseUOMddl').val(); //hidBaseUOM
            var Usage = parseFloat($(tr).find('td #hidUsage').val());
            //alert(Usage);
            if (Usage > 0) {
                isSelect = true;
            }
            if (isSelect) {
                //alert(Usage);
                if (Usage === 0 || isNaN(Usage)) {
                    $(tr).addClass('row-error');
                    $('#ltrMsg').text('@Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey("Please input usage value for ingredient"))  [' + IngredientName + ']');
                    return;
                }
                else if (Usage < 0) {
                    $(tr).addClass('row-error');
                    $('#ltrMsg').text('@Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey("Please enter a value greater than or equal to 0 for ingredient")) [' + IngredientName + ']');
                    return;
                }
                else {
                    $('#ltrMsg').text('');
                    $(tr).removeClass('row-error');
                }
                //===========
                if (BaseUOM === '') {
                    $(tr).addClass('row-error');
                    $('#ltrMsg').html('@Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey("Please choose UOM for ingredient")) [' + IngredientName + ']');
                    return;
                } else {
                    $(tr).removeClass('row-error');
                    $('#ltrMsg').text('');
                }
            }
            /*======*/
            if (isSelect) {
                var IngredientId = $(tr).find('td #hidIngredientId').val();
                var IngredientName = $(tr).find('td #hidIngredientName').val();
                var BaseUsage = $(tr).find('td #hidBaseUsage').val();

                var Usage = parseFloat($(tr).find('td #hidUsage').val());
                var Ingredient = {
                    IngredientId: IngredientId,
                    IngredientName: IngredientName,
                    BaseUOM: BaseUOM,
                    BaseUsage: BaseUsage,
                    Usage: Usage,
                    IsSelect: isSelect
                };
                data.push(Ingredient);
            }
        }
        var RecipeProductIngredientViewModels = {
            Type: ProductType,
            ProductId: ProductId,
            ProductName: ProductName,
            StoreId: StoreId,
            ListItem: data
        }
        //if (data.length > 0) {
        $.ajax({
            type: "POST",
            url: '@Url.Action("AddIngredient", "IngRecipes")',
            traditional: true,
            data: JSON.stringify(RecipeProductIngredientViewModels),
            contentType: "application/json; charset=utf-8",
            dataType: "html",
            beforeSend: function () {
                $('.se-pre-con').show();
            },
            error: function (e) {
            },
            success: function (data) {
                $('#modalIngredient').modal('hide');
                Search();
            },
            complete: function () {
                $('.se-pre-con').hide();
            }
        });
        //} else {
        //    $('#modalIngredient').modal('hide');
        //}
    }

</script>
