@using NuWebNCloud.Shared.Utilities;
@using NuWebNCloud.Shared
@model NuWebNCloud.Shared.Models.Settings.TableViewModels
<div class="table-responsive">
    <div class="x_panel">
        <div class="x_title">
            <h2>@Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey("Table List"))</h2>
            <div class="clearfix"></div>
        </div>
        <div class="x_content">
            <table id="datatable-responsive" class="table table-striped table-bordered dt-responsive nowrap table table-striped jambo_table bulk_action" cellspacing="0" style="width:100%;">
                <thead style="background-color:#34495e; color:#fff;">
                    <tr>
                        <th style="text-align:center;">@Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey("Name"))</th>
                        <th style="text-align:center;">@Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey("Zone"))</th>
                        <th style="text-align:center;">@Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey("Style"))</th>
                        <th style="text-align:center;">@Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey("Store"))</th>
                        <th style="text-align:center;">@Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey("Status"))</th>
                        <th style="text-align:center;">@Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey("Action"))</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.ListItem != null)
                    {
                        for (int i = 0; i < Model.ListItem.Count; i++)
                        {
                            string styleRow = "row-evenItem";
                            if (i % 2 == 0)
                            {
                                styleRow = "row-oddItem";
                            }
                            var item = Model.ListItem[i];
                            <tr class="@styleRow">
                                <td style="color:#34495e; font-weight:bold;">&nbsp;&nbsp;+&nbsp;@Model.ListItem[i].Name</td>
                                <td style="text-align:center;">@Model.ListItem[i].ZoneName</td>
                                <td style="text-align:center;">
                                    @if (item.ViewMode == (byte)Commons.ETableStyle.Circle)
                                    {
                                        @Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey(Commons.ETableStyle.Circle.ToString()))
                                    }
                                        else if (item.ViewMode == (byte)Commons.ETableStyle.Rectangle)
                                        {
                                            @Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey(Commons.ETableStyle.Rectangle.ToString()))
                                                        }
                                            else if (item.ViewMode == (byte)Commons.ETableStyle.Square)
                                            {
                                               @Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey(Commons.ETableStyle.Square.ToString()))
                                                                                }
                                               else
                                               {
                                                  @Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey(Commons.ETableStyle.Other.ToString()))
                                                                                                           }
                                </td>
                                <td style="text-align:center;">@Model.ListItem[i].StoreName</td>
                                <td style="text-align:center;">
                                    @if (item.IsActive)
                                    {
                                        <span class="label label-success">@Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey("Active"))</span>
                                    }
                                    else
                                    {
                                        <span class="label label-danger">@Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey("InActive"))</span>
                                    }
                                </td>
                                <td style="text-align:center;">
                                    <a href="javascript:void(0)"
                                       onclick="ShowView('@Url.Action("View", "STable", new { id = Model.ListItem[i].ID })')"
                                       class="btn btn-primary btn-xs view details"><i class="fa fa-eye"></i>&nbsp;@Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey("View"))</a>&nbsp;&nbsp;
                                    <a href="javascript:void(0)"
                                       onclick="ShowView('@Url.Action("Edit", "STable", new { id = Model.ListItem[i].ID })')"
                                       class="btn btn-info btn-xs edit details"><i class="fa fa-edit"></i>&nbsp;@Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey("Edit"))</a>&nbsp;&nbsp;
                                    <a href="javascript:void(0)"
                                       onclick="ShowView('@Url.Action("Delete", "STable", new { id = Model.ListItem[i].ID })')"
                                       class="btn btn-danger btn-xs delete details"><i class="fa fa-trash-o"></i>&nbsp;@Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey("Delete"))</a>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<script type="text/javascript">
    function ShowView(url) {
        ShowViewOrEdit(url);
        return false;
    }
    $(document).ready(function () {
        var handleDataTableButtons = function () {
            if ($("#datatable-buttons").length) {
                $("#datatable-buttons").DataTable({
                    dom: "Bfrtip",
                    responsive: true
                });
            }
        };

        TableManageButtons = function () {
            "use strict";
            return {
                init: function () {
                    handleDataTableButtons();
                }
            };
        }();

        $('#datatable').dataTable();
        $('#datatable-keytable').DataTable({
            keys: true
        });

        var table = $('#datatable-responsive').DataTable({
            "columnDefs": [
                { "orderable": false, "targets": [5] },
                { "width": "10%", "targets": 1 },
                { "width": "7%", "targets": 2 },
                { "width": "8%", "targets": 3 },
                { "width": "5%", "targets": 4 },
                { "width": "10%", "targets": 5 },
            ],
            "order": [[ 1, 'asc' ]],
            "displayLength": 25,
            "drawCallback": function ( settings ) {
                var api = this.api();
                var rows = api.rows( {page:'current'} ).nodes();
                var last=null;
                //Column Group
                api.column(1, {page:'current'} ).data().each( function ( group, i ) {
                    if ( last !== group ) {
                        $(rows).eq( i ).before(
                            '<tr class="group"><td colspan="6"><strong style="color:#d9534f;">'+group+'</strong></td></tr>'
                        );
                        last = group;
                    }
                } );
            }
        });

        var table = $('#datatable-fixed-header').DataTable({
            fixedHeader: true
        });

        TableManageButtons.init();
    });
</script>