@using NuWebNCloud.Shared.Utilities;
@using NuWebNCloud.Shared
@model NuWebNCloud.Shared.Models.Ingredients.ReceiptNoteViewModels
@{
    int i = 0;
}
<div class="table-responsive">
    <div class="x_panel">
        <div class="x_title">
            <h2>@Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey("Received Note"))</h2>
            <div class="clearfix"></div>
        </div>
        <div class="x_content">
            <table id="datatable-responsive" class="table table-striped table-bordered dt-responsive nowrap table table-striped jambo_table bulk_action" cellspacing="0" style="width:100%;">
                <thead style="background-color:#34495e; color:#fff;">
                    <tr>
                        <th style="text-align:center;">@Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey("Received No"))</th>
                        <th style="text-align:center;">@Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey("PO Number"))</th>
                        <th style="text-align:center;">@Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey("Status"))</th>
                        <th style="text-align:center;">@Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey("Received Date"))</th>
                        <th style="text-align:center;">@Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey("Supplier"))</th>
                        <th style="text-align:center;">@Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey("Received by"))</th>
                        <th style="text-align:center;">@Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey("Return Note"))</th>
                        <th class="text-center">@Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey("Action"))</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.ListItem)
                    {
                        string styleRow = "row-evenItem";
                        if (i % 2 == 0)
                        {
                            styleRow = "row-oddItem";
                        }
                        <tr class="@styleRow">
                            <td style="color:#34495e; font-weight:bold;">
                                @item.ReceiptNo
                                @if (item.ListReturnNote != null && item.ListReturnNote.Count > 0)
                                {
                                    <!-- Split button -->
                                    <div class="btn-group pull-right" @*style="margin-top:-20px;"*@>
                                        <button type="button" class="btn btn-info btn-xs">@Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey("Return Note"))</button>
                                        <button type="button" class="btn btn-info btn-xs dropdown-toggle dropdown-menu-form" data-toggle="dropdown" aria-expanded="false">
                                            <span class="caret"></span>
                                            <span class="sr-only">Toggle Dropdown</span>
                                        </button>
                                        <div class="dropdown-menu dropdown-menu-form" role="menu" style="left:0px;">
                                            <table style="font-size:13px; width:100%;">
                                                <thead>
                                                    <tr>
                                                        <td colspan="3" class="text-center" style="padding:5px 0; border-bottom:1px solid #fff;"> @Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey("Return Note"))</td>
                                                    </tr>
                                                    <tr>
                                                        <td>@*<input type="checkbox" class="chkAllRT_@item.Id" />*@</td>
                                                        <td class="text-center">#</td>
                                                        <td class="text-center">@Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey("Quantity"))</td>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @foreach (var itemRN in item.ListReturnNote)
                                                    {
                                                        <tr>
                                                            <td style="padding-right:5px;">
                                                                <input type="checkbox" class="chkRT_@item.Id" data-id="@itemRN.Id" />
                                                            </td>
                                                            <td>@itemRN.ReturnNoteNo</td>
                                                            <td class="text-center">@itemRN.TotalQty</td>
                                                        </tr>
                                                    }
                                                    <tr>
                                                        <td colspan="3" class="text-right">
                                                            <a href="javascript:void(0)" onclick="ViewRetuenNote('@item.Id');"
                                                               class="btn btn-primary btn-xs view details" id="btn_View"><i class="fa fa-eye"></i>@Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey("View"))</a>
                                                            <a href="javascript:void(0)" class="btn btn-danger btn-xs edit details"><i class="fa fa-edit"></i>&nbsp;@Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey("Cancel"))</a>
                                                        </td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                }
                            </td>
                            <td style="text-align:center;">
                                @{
                                    for (int j = 1; j <= item.ListPONo.Split(',').Length; j++)
                                    {
                                        string PONumber = item.ListPONo.Split(',')[j - 1].ToString();
                                        @:@PONumber
                                        if (j % 5 == 0)
                                        {
                                            @Html.Raw("<br/>")
                                        }
                                        else
                                        {
                                            if (!(j == item.ListPONo.Split(',').Length))
                                            {
                                                @:,
                                            }
                                        }
                                    }
                                }

                            </td>
                            <td style="text-align:center;">
                                @if (item.Status == (int)Commons.EReceiptNoteStatus.Closed)
                                {
                                    <span class="label label-danger">@Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey(Commons.EReceiptNoteStatus.Closed.ToString()))</span>
                                }
                                else if (item.Status == (int)Commons.EReceiptNoteStatus.Return)
                                {
                                    <span class="label label-info">@Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey(Commons.EReceiptNoteStatus.Return.ToString()))</span>
                                }
                            </td>
                            <td style="text-align:center;">@item.ReceiptDate.ToString("MM/dd/yyyy")</td>
                            <td style="text-align:center;">@item.SupplierName</td>
                            <td style="text-align:center;">@item.ReceiptBy</td>
                            <td style="text-align:center;">
                                @*<a href="@Url.Action("Create", "IngIngredients")" id="lnkCreate" class="btn btn-default btn-block menuTab @(Model == "create" ? new HtmlString("active") :
                                    new HtmlString(""))"><i class="fa fa-plus"></i>&nbsp;&nbsp;Add new</a>*@

                                @*<a href="javascript:void(0);"
                                    onclick="ShowView('@Url.Action("CreateReturnNote", "IngReceiptNote", new { id = item.Id })');"
                                    class="btn btn-info btn-xs edit details" id="btnReturn"><i class="fa fa-mail-reply"></i>&nbsp;Return</a>*@

                                @if (item.IsPurchaseOrder)
                                {
                                    <a href="@Url.Action("CreateReturnNote", "IngReceiptNote", new { id = item.Id })"
                                       class="btn btn-info btn-xs edit details" id="btnReturn"><i class="fa fa-mail-reply"></i>&nbsp;@Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey("Return"))</a>
                                }
                            </td>
                            <td style="text-align:center;">
                                <a href="javascript:void(0)" class="btn btn-primary btn-xs view details" id="btn_View" onclick="LoadDetail('@item.Id','@item.ReceiptNo');"><i class="fa fa-eye"></i>@Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey("View"))</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<!--For popup-->
<div class="modal fade" id="modelDetail" tabindex="-1" role="dialog" aria-hidden="true" data-backdrop="static">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-body scroll" style="padding:0;">
                <div id="tbl-listDetail" style="padding:15px;">
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    function ShowView(url) {
        ShowViewOrEdit(url);
        return false;
    }

    $(function () {
        $('.dropdown-toggle').on('click', function (e) {
            if ($(this).hasClass('dropdown-menu-form')) {
                e.stopPropagation();
                $('.dropdown-toggle').dropdown();
            }
        });
    });

    $(document).ready(function () {
        $('.dropdown-toggle').dropdown();

        var handleDataTableButtons = function () {
            if ($("#datatable-buttons").length) {
                $("#datatable-buttons").DataTable({

                    dom: "Bfrtip",
                    responsive: true
                });
            }
        };

        TableManageButtons = function () {
            "use strict";
            return {
                init: function () {
                    handleDataTableButtons();
                }
            };
        }();

        $('#datatable').dataTable();
        $('#datatable-keytable').DataTable({
            keys: true
        });

        $('#datatable-responsive').DataTable({
            "columnDefs": [
                { "type": "string-num", targets: 0 },
                { "orderable": false, "targets": [6, 7] },
                { "width": "8%", "targets": [2, 3, 4, 5] },
                { "width": "5%", "targets": [6, 7] },
                { "width": "20%", "targets": [0] }
            ],
            "order": [
                    [4, 'asc'],
                    [0, 'asc']
            ]
        });

        var table = $('#datatable-fixed-header').DataTable({
            fixedHeader: true
        });

        TableManageButtons.init();
    });

    function LoadDetail(id, rn) {
        $.ajax({
            url: '@Url.Action("LoadDetail", "IngReceiptNote")',
            type: 'POST',
            data: { ReceiptNoteId: id },
            dataType: 'html',
            traditional: true,
            beforeSend: function () {
                $('.se-pre-con').show();
            },
            error: function (e) {
                $('.se-pre-con').hide();
            },
            success: function (data) {
                // Updated 07182018
                var isLogin = BackToLoginWhenSessionEnd(data);
                if (isLogin === true) {
                    window.location = "/Login/Index";
                }
                else {
                    $("#modelDetail").modal({
                        keyboard: false,
                        show: true,
                    });
                    $('#ltrReceiptNote').html("#" + rn);
                    $('#tbl-listDetail').html(data);
                }
            },
            complete: function () {
                $('.se-pre-con').hide();
            }
        });
    };

    function ViewRetuenNote(ReceiptId) {
        var data = [];
        $('input.chkRT_' + ReceiptId + ':checkbox:checked').each(function () {
            var ReturnNoteId = $(this).attr('data-id');
            ////alert(ReturnNoteId);
            data.push(ReturnNoteId);
        });
        var ReturnNoteReceiptView = {
            ListReturnNoteId: data,
            ReceiptId: ReceiptId
        }
        if (data.length > 0) {
            $.ajax({
                type: "POST",
                url: '@Url.Action("ViewReturnNote", "IngReceiptNote")',
                traditional: true,
                data: JSON.stringify(ReturnNoteReceiptView),
                contentType: "application/json; charset=utf-8",
                dataType: "html",
                beforeSend: function () {
                    $('.se-pre-con').show();
                },
                success: function (data) {
                    // Updated 07182018
                    var isLogin = BackToLoginWhenSessionEnd(data);
                    if (isLogin === true) {
                        window.location = "/Login/Index";
                    }
                    else {
                        $(".detail-view").html(data);
                        $(".detail-view").show();
                        $(".gridview").css("display", "none");
                    }
                },
                complete: function () {
                    $('.se-pre-con').hide();
                },
                error: function (e) {
                    $('.se-pre-con').hide();
                },
            });
        }
    }
</script>
