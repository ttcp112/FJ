@model  NuWebNCloud.Shared.Integration.Models.Sandbox.InteEmployeeViewModels
@using NuWebNCloud.Shared.Utilities;
<div class="table-responsive">
    <div class="x_panel">
        <div class="x_title">
            <h2>@Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey("Employees"))</h2>
            <div class="clearfix"></div>
        </div>
        <div class="x_content">
            <table id="datatable-responsive" class="table table-striped table-bordered dt-responsive nowrap table table-striped jambo_table bulk_action" cellspacing="0" style="width:100%;">
                <thead style="background-color:#34495e; color:#fff;">
                    <tr>
                        <th style="text-align:center;">@Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey("Name"))</th>
                        <th style="text-align:center;">@Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey("Phone"))</th>
                        <th style="text-align:center;">@Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey("Email"))</th>
                        <th style="text-align:center;">@Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey("Role Name"))</th>
                        <th style="text-align:center;">@Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey("Store Name"))</th>
                        <th style="text-align:center;">@Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey("Image"))</th>
                        <th style="text-align:center;">@Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey("Status"))</th>
                        <th style="text-align:center;">@Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey("Action"))</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.ListItem != null)
                    {
                        for (int i = 0; i < Model.ListItem.Count; i++)
                        {
                            string styleRow = "row-evenItem";
                            if (i % 2 == 0)
                            {
                                styleRow = "row-oddItem";
                            }
                            var item = Model.ListItem[i];
                            <tr class="@styleRow">
                                <td style="color:#34495e; font-weight:bold;">&nbsp;&nbsp;&nbsp;@item.Name</td>
                                <td >@item.Phone</td>
                                <td >@item.Email</td>
                                <td style="text-align:center;">@item.RoleName</td>
                                <td style="text-align:center;">@item.StoreName</td>
                                <td style="text-align:center;">
                                    <img src="@item.ImageURL" height="30" width="30" class="img-circle" />
                                </td>
                                <td style="text-align:center;">
                                    @if (item.IsActive)
                                    {
                                        <span class="label label-success">@Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey("Active"))</span>
                                    }
                                    else
                                    {
                                        <span class="label label-danger">@Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey("InActive"))</span>
                                    }
                                </td>
                                <td style="text-align:center;">
                                    <a href="#"
                                       onclick="ShowView('@Url.Action("View", "SBEmployeeInte", new { id = item.ID, StoreId = item.StoreID })')"
                                       class="btn btn-primary btn-xs view details"><i class="fa fa-eye"></i>&nbsp;@Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey("View"))</a>
                                    <a href="#"
                                       onclick="ShowView('@Url.Action("Edit", "SBEmployeeInte", new { id = item.ID, StoreId = item.StoreID })')"
                                       class="btn btn-info btn-xs edit details"><i class="fa fa-edit"></i>&nbsp;@Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey("Edit"))</a>
                                    <a href="#"
                                       onclick="ShowView('@Url.Action("Delete", "SBEmployeeInte", new { id = item.ID, StoreId = item.StoreID })')"
                                       class="btn btn-danger btn-xs delete details"><i class="fa fa-trash-o"></i>&nbsp;@Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey("Delete"))</a>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<script type="text/javascript">
    function ShowView(url) {
        ShowViewOrEdit(url);
        return false;
    }
    $(document).ready(function () {
        var handleDataTableButtons = function () {
            if ($("#datatable-buttons").length) {
                $("#datatable-buttons").DataTable({

                    dom: "Bfrtip",
                    responsive: true
                });
            }
        };

        TableManageButtons = function () {
            "use strict";
            return {
                init: function () {
                    handleDataTableButtons();
                }
            };
        }();

        $('#datatable').dataTable();
        $('#datatable-keytable').DataTable({
            keys: true
        });

        var table = $('#datatable-responsive').DataTable({
            "columnDefs": [
                { "orderable": false, "targets": [5, 7] },
                { "width": "7%", "targets": 1 },
                { "width": "20%", "targets": 2 },
                { "width": "15%", "targets": 3 },
                { "width": "8%", "targets": 4 },
                { "width": "5%", "targets": 5 },
                { "width": "3%", "targets": 6 },
                { "width": "10%", "targets": 7 },
            ],
            "order": [[4, 'asc']],
            "displayLength": 50,
            "drawCallback": function (settings) {
                var api = this.api();
                var rows = api.rows({ page: 'current' }).nodes();
                var last = null;
                //Column Group
                api.column(4, { page: 'current' }).data().each(function (group, i) {
                    if (last !== group) {
                        $(rows).eq(i).before(
                            '<tr class="group"><td colspan="8"><strong style="color:#d9534f;">' + group + '</strong></td></tr>'
                        );
                        last = group;
                    }
                });
            }
        });

        //// Order by the grouping
        //$('#datatable-responsive tbody').on( 'click', 'tr.group', function () {
        //    debugger;
        //    var val="";
        //    var currentOrder = table.order()[0];
        //    if ( currentOrder[0] === 2 && currentOrder[1] === 'asc' ) {
        //        table.order( [ 2, 'desc' ] ).draw();
        //    }
        //    else {
        //        table.order( [ 2, 'asc' ] ).draw();
        //    }
        //} );

        var table = $('#datatable-fixed-header').DataTable({
            fixedHeader: true
        });

        TableManageButtons.init();
    });
</script>