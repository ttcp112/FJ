@using NuWebNCloud.Shared.Utilities;
@model NuWebNCloud.Shared.Models.Sandbox.Inventory.Product.GroupProductModels

@if (Model != null && Model.ListProductOnGroup != null && Model.ListProductOnGroup.Count > 0)
{
    for (int i = 0; i < Model.ListProductOnGroup.Count; i++)
    {
        <tr data-id="@Model.ListProductOnGroup[i].ProductID" class="mediate-dish dish_@Model.OffSet">
            <td width="10%">
                @Html.TextBox(string.Format("ListGroup[{0}].ListProductOnGroup[{1}].Sequence", Model.OffSet, Model.ListProductOnGroup[i].OffSet),
               Model.ListProductOnGroup[i].Sequence, new { @class = "form-control input-number text-center", @maxlength = 2 })
            </td>
            <td width="50%">
                <div class="input-group input-group-sm col-md-8" style="margin:0 auto; width: 90%;">
                    @Html.TextBox(string.Format("ListGroup[{0}].ListProductOnGroup[{1}].ProductName", Model.OffSet,
                   Model.ListProductOnGroup[i].OffSet),

                   Model.ListProductOnGroup[i].ProductName, new { @class = "form-control", @readonly = "readonly" })

                    @Html.Hidden(string.Format("ListGroup[{0}].ListProductOnGroup[{1}].OffSet",
                   Model.OffSet, Model.ListProductOnGroup[i].OffSet), Model.ListProductOnGroup[i].OffSet)

                    @Html.Hidden(string.Format("ListGroup[{0}].ListProductOnGroup[{1}].ProductID",
                   Model.OffSet, Model.ListProductOnGroup[i].OffSet), Model.ListProductOnGroup[i].ProductID)

                    @Html.Hidden(string.Format("ListGroup[{0}].ListProductOnGroup[{1}].GroupID",
                   Model.OffSet, Model.ListProductOnGroup[i].OffSet), Model.ListProductOnGroup[i].GroupID)

                    @Html.Hidden(string.Format("ListGroup[{0}].ListProductOnGroup[{1}].Status",
                   Model.OffSet, Model.ListProductOnGroup[i].OffSet), Model.ListProductOnGroup[i].Status,
                   new { @class = "DishStatus" })

                    <span class="input-group-btn">
                        <button data-toggle="modal" data-target="#modal-choose-dish" class="btn btn-primary" type="button">
                            <i class="glyphicon glyphicon-list"></i>
                        </button>
                    </span>
                </div>
            </td>
            <td width="20%">
                @Html.TextBox(string.Format("ListGroup[{0}].ListProductOnGroup[{1}].ExtraPrice", Model.OffSet,
               Model.ListProductOnGroup[i].OffSet), Model.ListProductOnGroup[i].ExtraPrice,
               new { @class = "form-control  text-center number" })
            </td>

            <!--Button Delete Dish-->
            <td width="10%">
                <a href="javascript:void(0)" onclick="DeleteDish(this); return false;">
                    <i class="glyphicon glyphicon-minus-sign" style="font-size: 25px; color: red; padding: 5px 0px; "></i>
                </a>
            </td>
        </tr>
    }
}

<script>
    // mini jQuery plugin that formats to two decimal places
    (function ($) {
        $.fn.numberFormat = function () {
            this.each(function (i) {
                $(this).change(function (e) {
                    if (isNaN(parseFloat(this.value))) return;
                    this.value = parseFloat(this.value).toFixed(2);
                });
            });
            return this; //for chaining
        }
    })(jQuery);
    $(document).ready(function () {
        // apply the numberFormat behaviour to elements with 'number' as their class
        $(function () {
            $('.number').numberFormat();
        });
        //===============
        $(".number").each(function (i) {
            if (isNaN(parseFloat(this.value)))
                return;
            this.value = parseFloat(this.value).toFixed(2);
        });
    });
</script>