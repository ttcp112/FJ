@model NuWebNCloud.Shared.Models.Ingredients.STIngredientViewModels
@using NuWebNCloud.Shared.Utilities;

@if (Model.ListItemView != null)
{
    @*<table id="datatable-inpopup" class="table table-striped table-bordered dt-responsive nowrap table table-striped jambo_table bulk_action" cellspacing="0" style="width:100%;">*@
    <table class="table center-content">
        <thead>
            <tr style="background-color:#34495e; color:#fff;">
                <th style="width:10%;text-align:center;"><input type="checkbox" onclick="TickAllCheckBox(this)" /></th>
                <th style="width:35%;text-align:center;">@Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey("Ingredient Name"))</th>
                <th style="width:35%; text-align:center;">@Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey("Description"))</th>
                <th style="width:20%; text-align:center;">@Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey("Receiving UOM"))</th>
            </tr>
        </thead>
        <tbody id="body-dishes0">
            @for (int i = 0; i < Model.ListItemView.Count; i++)
                {
                @*string styleRow = "row-even";
                    if (i % 2 == 0)
                    {
                        styleRow = "row-odd";
                    }
                    <tr class="@styleRow">*@
                <tr>
                    <td style="text-align:center;">
                        @Html.CheckBoxFor(model => model.ListItemView[i].IsSelect, new { @tabindex = "-1" })

                        @Html.HiddenFor(model => model.ListItemView[i].IngredientId, new { @id = "hidIngredientId" })
                        @Html.HiddenFor(model => model.ListItemView[i].IngredientName, new { @id = "hidIngredientName" })
                        @Html.HiddenFor(model => model.ListItemView[i].IngredientCode, new { @id = "hidIngredientCode" })
                        @Html.HiddenFor(model => model.ListItemView[i].IngredientName, new { @id = "hidDescription" })
                        @Html.HiddenFor(model => model.ListItemView[i].BaseUOM, new { @id = "hidBaseUOM" })
                        @Html.HiddenFor(model => model.ListItemView[i].UOMId, new { @id = "hidUOMId" })

                    </td>
                    <td id="search" onclick="TickCheckBox(this)">@Model.ListItemView[i].IngredientName</td>
                    <td style="text-align:center;">@Model.ListItemView[i].IngredientName</td>
                    <td style="text-align:center;">@Model.ListItemView[i].BaseUOM</td>
                </tr>
            }
        </tbody>
    </table>
    <script src="@Url.Content("~/build/js/fnFilterClear.js")"></script>
    <script>
           $(document).ready(function () {
                // apply the numberFormat behaviour to elements with 'number' as their class
               

                //update responsive
                var table = $('#datatable-inpopup').DataTable({
                    dom: "<'row'<'col-sm-6'l><'col-sm-3'f>>",
                    "responsive": true,
                    "columnDefs": [
                        { "orderable": false, "targets": [0, 2, 3] },
                        { "width": "2%", "targets": [0] },
                    ],
                    "order": [[1, 'asc']],
                    "displayLength": 25,
                    "drawCallback": function (settings) {
                        var api = this.api();
                        var rows = api.rows({ page: 'current' }).nodes();
                        var last = null;

                    }
                });
                //new $.fn.dataTable.FixedHeader(table);

                @*$(".select2_multiple").select2({
                    placeholder: '@Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey("please choose UOM"))',
                    allowClear: true
                });*@

            });

            function abc() {
                //Away 1
                var table = $('#datatable-inpopup').DataTable();
                table
                 .search('')
                 .columns().search('')
                 .draw();

            }

    </script>
}