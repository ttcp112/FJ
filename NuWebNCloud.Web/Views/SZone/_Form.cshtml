@using NuWebNCloud.Shared.Utilities;
@model NuWebNCloud.Shared.Models.Settings.Zone.ZoneModels
@{
    Html.EnableUnobtrusiveJavaScript(true);
    var _ID = Model.ID;

}
@Html.HiddenFor(model => model.ID)
@if (!string.IsNullOrEmpty(_ID))
{
    @Html.Hidden("StoreID", Model.StoreID)
}

<div class="row form-horizontal form-label-left" style="margin-bottom:15px;">


    @*Choose Store*@
    <div class="form-group">
        <label class="control-label col-md-2 col-sm-2 col-xs-12">@Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey("Choose Store")) </label>
        <div class="col-md-6 col-sm-6 col-xs-12">
            @*@Html.DropDownListFor(model => model.StoreID,
                new SelectList(@ViewBag.ListStore, "Value", "Text", Model.StoreID), null,
                !string.IsNullOrEmpty(_ID) ? (object) new
                {
                    @class = "form-control select2_multiple",
                    @disabled = "disabled",
                    @id = "storeDdl",
                    @style = "width:100%;"
                } : new
                {
                    @class = "form-control select2_multiple",
                    @id = "storeDdl",
                    @style = "width:100%;"
                })*@

            @*Group by company, updated 041420180*@
            @Html.DropDownListFor(model => model.StoreID,
                 (SelectList)ViewBag.StoreID,
                 !string.IsNullOrEmpty(_ID) ? (object)new
                 {
                     @class = "form-control select2_multiple",
                     @disabled = "disabled",
                     @id = "storeDdl",
                     @style = "width:100%;"
                 } : new
                 {
                     @class = "form-control select2_multiple",
                     @id = "storeDdl",
                     @style = "width:100%;"
                 })
            @Html.ValidationMessageFor(model => model.StoreID, null, new { @class = "label" })
        </div>
    </div>

    @*Category Name*@
    <div class="form-group">
        <label class="control-label col-md-2 col-sm-2 col-xs-12">@Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey("Zone Name")) </label>
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.TextBoxFor(model => model.Name, new { @class = "form-control", placeholder = @Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey("Zone Name")), autocomplete = "off" })
            @Html.ValidationMessageFor(model => model.Name, null, new { @class = "label" })
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-md-2 col-sm-2 col-xs-12">@Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey("Number of rows")) </label>
        <div class="col-md-6 col-sm-6 col-xs-12">

            @Html.TextBoxFor(model => model.Height, new { @class = "form-control", placeholder = "0", type = "number", min = 1 })
            @Html.ValidationMessageFor(model => model.Height, null, new { @class = "label" })
        </div>
    </div>
    @*Show in Reservation & Queue*@
    <div class="form-group">
        <label class="control-label col-md-2 col-sm-2 col-xs-12">@Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey("Number of columns")) </label>
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.TextBoxFor(model => model.Width, new { @class = "form-control", placeholder = "0", type = "number", min = 1 })
            @Html.ValidationMessageFor(model => model.Width, null, new { @class = "label" })
        </div>
    </div>
    @*Description*@
    <div class="form-group">
        <label class="control-label col-md-2 col-sm-2 col-xs-12">@Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey("Description"))</label>
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.TextAreaFor(model => model.Description, new { @class = "form-control", placeholder = @Html.Raw(_AttributeForLanguage.CurrentUser.GetLanguageTextFromKey("Description")) })
        </div>
    </div>

</div>

<script>
    $(document).ready(function () {
        //=== Select Store
        $("#storeDdl").select2().val(@Html.Raw(Json.Encode(Model.StoreID))).trigger('change.select2');
    });
</script>